/* 
edit task
edit profile 
if not logged in [save draft-task in req.session.tasks and then when login save all that data {userAuthentication.js -> /register}]
    Case 1: use isLoggedIn() so that for not logged in user it is fast
    Case 2: scrap isLoggedIn() and let data persist when user decides to login
forgot password [nodemailer]
*/
/* https://drive.google.com/drive/folders/1ozEHbdo9AbLOS4d1mTfE5dy3e36-s-8a */
/* 
inside header.ejs
    
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown"
            aria-expanded="false">
            Dropdown
        </a>
        <ul class="dropdown-menu">
            <li><a class="dropdown-item" href="#">Action</a></li>
            <li><a class="dropdown-item" href="#">Another action</a></li>
            <li>
                <hr class="dropdown-divider">
            </li>
            <li><a class="dropdown-item" href="#">Something else here</a></li>
        </ul>
    </li>
        
    <form class="d-flex mt-3" role="search">
        <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
        <button class="btn btn-outline-success" type="submit">Search</button>
    </form>  
*/


/* 
.themeBtn{
    width: 25px; 
    height: 25px; 
    border: none; 
    outline: none; 
    align-self: flex-start;
    margin: 15px 15px 0px 0px; 
    background-color: transparent; 
}
.themeBtn:hover {
    cursor: pointer;
    opacity: 80%;
} 
.dark_mode_modification{
    width: 31px;
    height: 31px;
    margin: 12.5px 12.5px 0px 0px;
}
.hidden {
    display: none;
}
.ribbon {
    display: grid;
    grid-template-columns: 5fr 1fr;
    width: 100%;
    margin: 4px 0px;
    gap: 20px;
}
#mainField {
    font-size: 20px;
    width: 100%;
    height: 42px;
    margin-left: 2px;
    padding: 1px 1px 1px 10px;
    border: 2px solid gray;
    border-radius: 5px;
}
.searchBar {
    display: flex;
    justify-content: space-between;
    min-width: 215px;
    height: 44px;
    margin-right: 2px;
    border-radius: 4px;
    border: 2px solid gray;
}
#backBtn, #search, #searchBtn {
    font-size: 20px;
    height: 41.5px;
    border: none;
    padding: 1px 6px;
}
#search {
    width: 100%;
    height: 97%;
}
#searchBtn {
    height: inherit;
    border-radius: 0 2px 2px 0;
    cursor: pointer;
    background-color: gainsboro;
    font-weight: bold;
}
#backBtn {
    height: inherit;
    width: 50px;
    border-radius: 2px 0 0 2px;
    cursor: pointer;
    background-color: gainsboro;
}
#backBtn:hover, #searchBtn:hover {
    background-color: gray;
}
#backBtn > img {
    position: relative;
    top:3.5px;
}
.main {
    min-height: 64.6vh;
}
.tasks {
    width: 98%;
    padding: 5px 5px 50px 0px;
    margin: 0 auto;
}
.container {
    width: 98%;
    height: 35px;
    display: flex;
    justify-content: space-between;
    border: 1px solid gray;
    border-radius: 5px;
    background-color: #374151;
    margin: 5px;
}
.container.light_mode {
    background-color: whitesmoke;
}
.formLabel {
    width: 100%;
    border-radius: 5px;        
}
.formLabel:hover {
    cursor: pointer;           
    background-color: #293749;
    opacity: 80%;
}
.container.light_mode > .formLabel:hover{
    background-color: gainsboro;
}
.formLabel > label {
    font-size: 25px;
    padding-left: 15px;
    width: inherit;
}
.formLabel > label, input[type=checkbox] {
    pointer-events: none;
}
.isChecked {
    text-decoration: line-through;
}
.removeBtn {
    font-size: 20px;
    font-weight: bold;
    border: none;
    background-color: gainsboro;
    padding: 0 4px;
    border-radius: 0 4px 4px 0;
    height: 100%;
}
.removeBtn:hover {
    cursor: pointer;
    background-color: gray;
}
.popUp {
    width: 100%;
    height: 80vh;
    transform: scale(0);
    display: none;
    text-align: center;
}
.popUp.active {
    width: 100%;
    height: 100vh;
    text-align: center;
    transform: scale(1);
    display: block;
    pointer-events: none;
    z-index: 10;
}
.popUp > h1 {
    color: #504099;
    position: relative;
    top: -40px;
}

@media (max-width: 600px) {
    header, footer{
        height: 10vh;
    }
    .mian{
        min-height: 80vh;
    }
    
} 

*/